<?php
// $Id$

/**
 * @file
 * Install and uninstall all required databases. Also do incremental database updates.
 */

/**
 * Implementation of hook_uninstall().
 */
function taxonomy_menu_uninstall() {
  
  //remove menu items
  db_query("DELETE FROM {menu_links} WHERE module = '%s'", 'taxonomy_menu');

  //rebuild the menus
  variable_set('menu_rebuild_needed', TRUE);

  // Delete variables
  foreach (taxonomy_get_vocabularies() as $vocabulary) {
    variable_del('taxonomy_menu_sync_'. $vocabulary->vid);
    variable_del('taxonomy_menu_voc_item_'. $vocabulary->vid);
    variable_del('taxonomy_menu_display_num_'. $vocabulary->vid);
    variable_del('taxonomy_menu_expanded_'. $vocabulary->vid);
    variable_del('taxonomy_menu_path_'. $vocabulary->vid);
    variable_del('taxonomy_menu_token_term_path_'. $vocabulary->vid);
    variable_del('taxonomy_menu_token_vocab_path_'. $vocabulary->vid);
    variable_del('taxonomy_menu_hide_empty_terms_'. $vocabulary->vid);
    variable_del('taxonomy_menu_vocab_'. $vocabulary->vid);
  }

  // remove table
  drupal_uninstall_schema('taxonomy_menu');
}

/**
 * Implementation of hook_install().
 */
function taxonomy_menu_install() {
  drupal_install_schema('taxonomy_menu');
}

/**
 * Implementation of hook_schema().
 */
function taxonomy_menu_schema() {
  $schema['taxonomy_menu'] = array(
    'description' => t('Links a taxonomy term to a menu item'),
    'fields' => array(
      'mlid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => t('The taxonomy terms {menu_link}.mlid'),
      ),
      'tid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => t('tid that is linked to the mlid'),
      ),
      'vid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => t('vid for the tid'),
      ),
    ),
    'primary key' => array('mlid', 'tid'),
    'indexes' => array(
      'vid' => array('vid'),
    ),
  );
  return $schema;
}
