<?php

// $Id$

/**
 * @file
 * defaults hooks for taxonomy_menu
 */

/**
 * Implementation of hook_taxonomy_menu_handlers().
 *
 * @param $op
 *  'path', 'insert', 'update', 'delete', 'rebuild'
 *
 * @return array(function name => display)
 */
function taxonomy_menu_taxonomy_menu_handlers($op) {
  return array('taxonomy_menu_handler_default' => t('Default'));
}

/**
 * Implementation for taxonomy_menu_handler_default().
 *
 * @param $op
 *  'path' => return value will contain path handlers
 *  'insert' => add a vaule to the menu
 *  'update' => updated a menu link
 *  'delete' => detete a menu link
 * @param $args
 *  if $op == 'insert' then
 *   array with the following key/value pairs:
 *    'term' => term object,only if adding new term
 *    'menu_name' => menu that the item is set to apply to
 *    'vid' => vodcab id.  only fill in if adding a new vocab
 *  if $op == 'delete' then
 *   array(
 *    'tid' => TermID
 *    'mlid' => Menu ID
 *   )
 *  if $op == 'update' then
 *   'term' => term object, if updating a term
 *   'menu_name' => menu that the item is set to apply to
 *   'vid' => vocab id.  if editing vocab item
 *   'mlid' => menu id
 *  if $op == 'path' then  ONLY SEND ONE of the three
 *   'term' => term object OR tid OR vid
 *   'tid' => termID
 *   'vid' => vocabID
 *
 * @return $item
 *  if $op == 'insert' then
 *   array with the following key/value pairs:
 *    'tid' => the term id (if 0 then adding the vocab as an item)
 *    'name' => the term's name
 *    'description' => term description, used as to build the title attribute
 *    'weight' => term weight
 *    'vid' => the vocabulary's id
 *    'ptid' => the term's parent's term id.  use 0 for vocab
 *    'menu_name' => the menu that the link item will be inserted into
 *    'path_type' => either term, tid or vid.  This is what will be pased to the path function
 *  if $op == 'delete' then array('tid' => TermID) OR ('link_path' => path to menu item)
 *  if $op == 'update' then
 *   array with the following key/value pairs:
 *    'tid' => the term id (if 0 then updating the vocab as an item)
 *    'name' => new menu name
 *    'description' => new menu description, used as to build the title attribute
 *    'weight' => new menu weight
 *    'vid' => the new vocabulary's id
 *    'ptid' => the new parent tid
 *    'mlid' => mlid that needs to be edited
 *    'path_type' => either term, tid or vid.  This is what will be pased to the path function  This must be a key of the array also.
 */
function taxonomy_menu_handler_default($op, $args = array()) {

  switch ($op) {
    //if looking for the path, we expect to be sent the tid
    case 'path':
      $tid = $args['tid'];
      //if tid = 0 then we are creating the vocab menu item format will be taxonomy/term/$tid+$tid+$tid....
      if ($tid == 0) {
        //get all of the terms for the vocab
        $vtids = _taxonomy_menu_defaults_get_terms($args['vid']);
        $end = implode('+',$vtids);
        return "taxonomy/term/$end"; 
      }
      else {
        return "taxonomy/term/$tid";
      }

    case 'delete':
      menu_link_delete($args['mlid']);
      _taxonomy_menu_defaults_delete_item($args['tid']);
      return;

    default:
      $menu_name = $args['menu_name'];

      //if vid is passed then we are building a vocab item
      if ($args['vid']) {
        $voc_item = variable_get('taxonomy_menu_voc_item_'. $args['vid'], 0);
        $vocab = taxonomy_vocabulary_load($args['vid']);
        $item = array(
          'tid' => 0,
          'name' => $vocab->name,
          'description' => $vocab->description,
          'weight' => $vocab->weight,
          'vid' => $args['vid'],
          'ptid' => 0,
          'menu_name' => $menu_name,
          'path_type' => 'vid',
        );

        return $item;
      }
      else {
        $term = $args['term'];
      }

       // get the first parent
      if (is_array($term->parents)) {
        foreach ($term->parents as $key => $val) {
          $ptid = $val;
          break;
        }
      }
      else {
        $ptid = $term->parents;
      }

      // turn the term into the correct $item array form
      $item = array(
        'tid' => $term->tid,
        'name' => $term->name,
        'description' => $term->description,
        'weight' => $term->weight,
        'vid' => $term->vid,
        'ptid' => $ptid,
        'menu_name' => $menu_name,
        'path_type' => 'tid',
      );

      if ($args['mlid']) {
        $item['mlid'] = $args['mlid'];
      }

      return $item;
  }
}

/**
  * Delete all row from {taxomony_maneu} associated with this tid
  *
  *
  * @param $vid
  *   vocabulary's id
  */
function _taxonomy_menu_defaults_delete_item($tid) {
  db_query('DELETE FROM {taxonomy_menu} WHERE tid = %d', $tid);
}

/**
 * Get all of the tid for a give vid
 * 
 * @param $vid
 * @return array of $tid
 */
function _taxonomy_menu_defaults_get_terms($vid) {
  $output = array();
  $result = db_query('SELECT tid FROM {term_data} WHERE vid = %d', $vid);
  while ($data = db_fetch_object($result)) {
    $output[] = $data->tid;
  }
  return $output;
}