<?php
/**
 * $Id$
 * @file taxonomy_menu.module
 * @author Jonathan Chaffer   <jchaffer@structureinteractive.com>
 * @author Bruno Massa        <http://drupal.org/user/67164>
 * It Generates menu links for all taxonomy terms
 */

/**
 * Admin area. Configure the module, setting which
 * vocabularies will be converted into menus items
 *
 * @return
 *   Array. The form fields.
 */
function __taxonomy_menu_admin() {
  require_once(drupal_get_path('module', 'taxonomy_menu') .'/taxonomy_menu.inc');
  return _taxonomy_menu_admin();
}

/**
 * Implementation of hook_help().
 */
function taxonomy_menu_help($section) {
  switch ($section) {
    case 'admin/help#taxonomy_menu':
      $output = '<p>'. t('Taxonomy terms allow classification of content into categories and subcategories.  The taxonomy menu module adds links to the navigation menu for taxonomy terms.  This is useful when the community is focused on creating content that is organized in a taxonomy.') .'</p>';
      $output .= '<p>'. t('The taxonomy menu administration interface allows taxonomy terms to be enabled to show in the navigation menu.  You can also select whether a term\'s descendents subterms are displayed.') .'</p>';
      $output .= t('<p>You can</p>
<ul>
<li>view a list of taxonomies in <a href="@admin-taxonomy">Administer &gt;&gt; Content management &gt;&gt; Categories</a>.</li>
<li>create a new vocabulary at <a href="@admin-taxonomy-add-vocabulary">Administer &gt;&gt; Content management &gt;&gt; Categories &gt;&gt; Add vocabulary</a>.</li>
</ul>', array('@admin-taxonomy' => url('admin/content/taxonomy'), '@admin-taxonomy-add-vocabulary' => url('admin/content/taxonomy/add/vocabulary')));
      $output .= '<p>'. t('For more information please read the configuration and customization handbook <a href="@taxonomy_menu">Taxonomy menu page</a>.', array('@taxonomy_menu' => 'http://www.drupal.org/handbook/modules/taxonomy_menu/')) .'</p>';
      return $output;
  }
}

/**
 * Implementation of hook_menu().
 *
 * Most of the heavy lifting of the module is done here.
 */
function taxonomy_menu_menu($may_cache) {
  if (!empty($may_cache)) {
    require_once(drupal_get_path('module', 'taxonomy_menu') .'/taxonomy_menu.inc');
    return _taxonomy_menu_menu();
  }
}

/**
 * Implementation of hook_taxonomy().
 *
 * Invalidates the menu cache on taxonomy changes.
 */
function taxonomy_menu_taxonomy() {
  menu_rebuild();
}

/**
 * Menu callback; manage settings for taxonomy menu.
 */
function taxonomy_menu_admin_settings() {
  $form['taxonomy_menu_display_descendants'] = array(
    '#type' => 'checkbox',
    '#title' => t('Display descendants'),
    '#return_value' => 1,
    '#default_value' => variable_get('taxonomy_menu_display_descendants', 1),
    '#description' => t('If checked, then when a term is selected all nodes belonging to subterms are also displayed.'),
   );

  foreach (taxonomy_get_vocabularies() as $vocabulary) {
    $form['taxonomy_menu_show_' . $vocabulary->vid] = array(
      '#type' => 'checkbox',
      '#title' => t('Show "%vocab" in menu', array('%vocab' => t($vocabulary->name))),
      '#return_value' => 1,
      '#default_value' => variable_get('taxonomy_menu_show_' . $vocabulary->vid, 1),
    );
  }

  return system_settings_form($form);
}

/**
 * Page callback that renders a node listing for the selected term.
 */
function __taxonomy_menu_page() {
  require_once(drupal_get_path('module', 'taxonomy_menu') .'/taxonomy_menu.inc');
  return _taxonomy_menu_page();
}

/**
 * Implementation of hook_nodeapi().
 *
 * This hook enables the menu to be displayed in context during node views.
 */
function taxonomy_menu_nodeapi(&$node, $op, $a3, $a4) {
  static $vocabs = array();
  // First check if the node has a relevant category.s
  if (empty($vocabs) and is_array($vocabs)) {

    // The node should have taxonomy terms
    if (!$terms = taxonomy_node_get_terms($node->nid)) {
      return;
    }

    // Check if at least one vocabulary is revelevant
    // for us, being a menu
    foreach ($terms as $term) {
      if (variable_get('taxonomy_menu_show_'. $term->vid, taxonomy_menu_NONE)) {
        $vocabs[$term->vid][] = $term->tid;
      }
    }

    // If none of the terms are tracked by this module,
    // forget it
    if (empty($vocabs)) {
      $vocabs = FALSE;
      return;
    }
  }

  if ($op == 'view' and $a4 == TRUE) {
    require_once(drupal_get_path('module', 'taxonomy_menu') .'/taxonomy_menu.inc');
    _taxonomy_menu_node_view($node, $vocabs);
  }
  elseif ($op == 'update' or $op == 'insert') {
      menu_rebuild();
  }
}